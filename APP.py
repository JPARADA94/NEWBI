# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lmTPrriyNiVTgVm4pFyATqQdf-7OGMoi
"""

import streamlit as st
import pandas as pd

# —————— Configuración de página ——————
st.set_page_config(page_title="Reordenador Excel MobilServ v2.0", layout="wide")
st.title("📊 Reordenador Excel a formato MobilServ – Versión 2.0")
st.markdown("**Creado por:** Javier Parada  \n**Ingeniero de Soporte en Campo**")

# —————— Instrucciones ——————
st.markdown("""
### 🧾 Instrucciones de uso:
1. Sube el archivo Excel (.xlsx) con los datos originales.
2. El sistema validará automáticamente los nombres de las columnas.
3. Si hay columnas con nombres modificados o en orden incorrecto, recibirás una advertencia.
4. Si todo está correcto, podrás continuar al reordenamiento y descarga del archivo limpio.
""")

# —————— Utilitario: convertir letra columna Excel a índice ——————
def col_letter_to_index(letter: str) -> int:
    idx = 0
    for c in letter.upper():
        idx = idx * 26 + (ord(c) - ord("A") + 1)
    return idx - 1

# —————— Encabezados esperados (Columna → Nombre encabezado) ——————
encabezados_esperados = {
    "A": "NOMBRE_CLIENTE", "Y": "ESTADO", "H": "FECHA_INFORME", "U": "COMPONENTE",
    "X": "DESCRIPTOR_COMPONENTE", "Z": "NIVEL_DE_SERVICIO", "V": "MARCA_COMPONENTE",
    "W": "MODELO_COMPONENTE", "E": "FECHA_MUESTREO", "F": "FECHA_INGRESO",
    "G": "FECHA_RECEPCION", "I": "EDAD_COMPONENTE", "J": "UNIDAD_EDAD_COMPONENTE",
    "K": "EDAD_PRODUCTO", "L": "UNIDAD_EDAD_PRODUCTO", "M": "CANTIDAD_ADICIONADA",
    "N": "UNIDAD_CANTIDAD_ADICIONADA", "O": "PRODUCTO", "B": "NOMBRE_OPERACION",
    "IO": "ÍNDICE PQ (PQI) - 3", "MI": "PLATA (AG) - 19", "AJ": "ALUMINIO (AL) - 20",
    "FK": "CROMO (CR) - 24", "BV": "COBRE (CU) - 25", "IE": "HIERRO (FE) - 26",
    "OZ": "TITANIO (TI) - 38", "MK": "PLOMO (PB) - 35", "JQ": "NÍQUEL (NI) - 32",
    "JJ": "MOLIBDENO (MO) - 30", "OB": "SILICIO (SI) - 36", "OG": "SODIO (NA) - 31",
    "MM": "POTASIO (K) - 27", "PD": "VANADIO (V) - 39", "BI": "BORO (B) - 18",
    "BD": "BARIO (BA) - 21", "BM": "CALCIO (CA) - 22", "BL": "CADMIO (CD) - 23",
    "JE": "MAGNESIO (MG) - 28", "JF": "MANGANESO (MN) - 29", "HQ": "FÓSFORO (P) - 34",
    "PO": "ZINC (ZN) - 40", "BZ": "CÓDIGO ISO (4/6/14) - 47",
    "FB": "CONTEO PARTÍCULAS >= 4 ΜM - 49", "FC": "CONTEO PARTÍCULAS >= 6 ΜM - 50",
    "FA": "CONTEO PARTÍCULAS >= 14 ΜM - 48", "KB": "**OXIDACIÓN - 80",
    "JR": "**NITRACIÓN - 82", "JU": "NÚMERO ÁCIDO (AN) - 43",
    "JW": "NÚMERO BÁSICO (BN) - 12", "JV": "NÚMERO BÁSICO (BN) - 17",
    "IG": "**HOLLÍN - 79", "GO": "DILUCIÓN POR COMBUSTIBLE - 46",
    "AE": "**AGUA (IR) - 81", "CS": "CONTENIDO AGUA (KARL FISCHER) - 41",
    "ER": "CONTENIDO GLICOL  - 105", "PG": "VISCOSIDAD A 100 °C - 13",
    "PH": "VISCOSIDAD A 40 °C - 14", "C": "N_MUESTRA"
}

# —————— Subida de archivo ——————
uploaded = st.file_uploader("📤 Sube tu archivo Excel (.xlsx):", type="xlsx")

if uploaded:
    df_check = pd.read_excel(uploaded, header=0, dtype=str, nrows=0)  # solo leer encabezados
    columnas_reales = df_check.columns.tolist()

    errores = []
    for col_letter, esperado in encabezados_esperados.items():
        idx = col_letter_to_index(col_letter)
        if idx < len(columnas_reales):
            encontrado = columnas_reales[idx].strip()
            if esperado.strip() != encontrado:
                errores.append(f"- Columna {col_letter}: se esperaba **\"{esperado}\"**, se encontró **\"{encontrado}\"**")
        else:
            errores.append(f"- Columna {col_letter}: se esperaba **\"{esperado}\"**, pero no existe en el archivo")

    if errores:
        st.error("❌ Las siguientes columnas tienen encabezados modificados o faltantes:")
        st.markdown("\n".join(errores))
        st.stop()
    else:
        st.success("✅ Verificación completada: los encabezados están correctos. Puedes continuar con el reordenamiento.")
        # Aquí puedes continuar con la lógica de reorganización